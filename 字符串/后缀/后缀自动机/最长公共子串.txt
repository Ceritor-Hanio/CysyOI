var
  s1,s2:ansistring;
  son:array[0..600000,1..26]of longint;
  pre,step:array[0..600000]of longint;
  last,total,i,p,j,k,t,ret,clen:longint;

function max(a,b:longint):longint;
begin
  if a>b then exit(a);
  exit(b);
end;

procedure push_back(v:longint);
begin
  inc(total);
  step[total]:=v;
end;

procedure extend(ch:longint);
var
  p,np,q,nq:longint;
begin
  push_back(step[last]+1);
  p:=last;np:=total;
  while (son[p,ch]=0)and(p<>-1) do
  begin
    son[p,ch]:=np;
    p:=pre[p];
  end;
  if p=-1 then pre[np]:=0
  else
  begin
    q:=son[p,ch];
    if step[q]<>step[p]+1 then
    begin
      push_back(step[p]+1);
      nq:=total;
      pre[nq]:=pre[q];
      son[nq]:=son[q];
      pre[q]:=nq;
      pre[np]:=nq;
      while son[p,ch]=q do
      begin
        son[p,ch]:=nq;
        if p=0 then break;
        p:=pre[p];
      end;
    end
    else pre[np]:=q;
  end;
  last:=np;
end;

procedure build;
var
  i:longint;
begin
  total:=0;
  last:=0;
  fillchar(step,sizeof(step),0);
  fillchar(pre,sizeof(pre),0);
  fillchar(son,sizeof(son),0);
  pre[0]:=-1;
  for i:=1 to length(s1) do
  extend(ord(s1[i])-ord('a')+1);
end;

begin
  readln(s1);
  readln(s2);
  build;
  p:=0;
  for i:=1 to length(s2) do
  begin
    if son[p,ord(s2[i])-ord('a')+1]<>0 then
    begin
      inc(clen);
      p:=son[p,ord(s2[i])-ord('a')+1];
    end
    else
    begin
      while (p<>-1)and(son[p,ord(s2[i])-ord('a')+1]=0) do p:=pre[p];
      if p=-1 then
      begin
        clen:=0;
        p:=0;
      end
      else
      begin
        clen:=step[p]+1;
        p:=son[p,ord(s2[i])-ord('a')+1];
      end;
    end;
    ret:=max(clen,ret);
  end;
  writeln(ret);
end.